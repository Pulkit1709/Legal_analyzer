name: ci

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flake8
      - name: Lint
        run: flake8 . --max-line-length=120
      - name: Unit & integration tests
        run: pytest -q

  build:
    if: github.ref == 'refs/heads/main'
    needs: [test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Build API image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/legal-analyzer-api:$(git rev-parse --short HEAD) -f Dockerfile.api .
      - name: Build Worker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/legal-analyzer-worker:$(git rev-parse --short HEAD) -f Dockerfile.worker .
      - name: Build Frontend image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/legal-analyzer-frontend:$(git rev-parse --short HEAD) -f Dockerfile.frontend .
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push images
        run: |
          SHA=$(git rev-parse --short HEAD)
          docker push ghcr.io/${{ github.repository_owner }}/legal-analyzer-api:$SHA
          docker push ghcr.io/${{ github.repository_owner }}/legal-analyzer-worker:$SHA
          docker push ghcr.io/${{ github.repository_owner }}/legal-analyzer-frontend:$SHA
